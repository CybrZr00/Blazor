<DemoPageSectionComponent Id="Grid-Summary-Custom" ShowHorizontalScrollBar="true">
    @inject NwindDataService NwindDataService

    @if(Data == null) {
        <p><em>Loading...</em></p>
    } else {
        <DxGrid @ref="Grid"
                Data="@Data"
                CustomSummary="Grid_CustomSummary"
                CustomizeSummaryDisplayText="Grid_CustomizeSummaryDisplayText"
                CssClass="w-100">
            <Columns>
                <DxGridColumn FieldName="CompanyName" />
                <DxGridColumn FieldName="City" Width="200px" />
                <DxGridColumn FieldName="Region" Width="120px" />
                <DxGridColumn FieldName="Country" Width="200px" />
                <DxGridColumn FieldName="UnitPrice" DisplayFormat="c" Width="120px" />
                <DxGridColumn FieldName="Quantity" Width="120px" />
            </Columns>
            <TotalSummary>
                <DxGridSummaryItem SummaryType="GridSummaryItemType.Count" FieldName="CompanyName" />
                <DxGridSummaryItem SummaryType="GridSummaryItemType.Custom" Name="Custom" FieldName="CompanyName" />
            </TotalSummary>
        </DxGrid>
    }
    @code {
        object Data { get; set; }
        IGrid Grid { get; set; }
        int totalSum;

        protected override async Task OnInitializedAsync() {
            var invoices = await NwindDataService.GetInvoicesAsync();
            var customers = await NwindDataService.GetCustomersAsync();
            Data = invoices.OrderBy(i => i.OrderDate).Join(customers, i => i.CustomerId, c => c.CustomerId, (i, c) => {
                return new {
                    CompanyName = c.CompanyName,
                    City = i.City,
                    Region = i.Region,
                    Country = i.Country,
                    UnitPrice = i.UnitPrice,
                    Quantity = i.Quantity
                };
            });
        }
        void Grid_CustomSummary(GridCustomSummaryEventArgs e) {
            if(e.SummaryStage == GridCustomSummaryStage.Start)
                totalSum = 0;
            else if(e.SummaryStage == GridCustomSummaryStage.Calculate) {
                if(Convert.ToInt16(e.GetValue("Quantity")) < 5)
                    totalSum ++;
            }
            else if(e.SummaryStage == GridCustomSummaryStage.Finalize)
                e.TotalValue = totalSum;
        }
        void Grid_CustomizeSummaryDisplayText(GridCustomizeSummaryDisplayTextEventArgs e) {
            if(e.Item.Name == "Custom")
                e.DisplayText = string.Format("Count (Quantity < 5): {0}", e.Value);
        }
    }
</DemoPageSectionComponent>

