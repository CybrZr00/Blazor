<CodeSnippetTabbed DocLink="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DxTagBox-2.HideSelectedItems">
<CodeSnippetTabPage Text="Razor">
@(@"<DxTagBox Data=""@DataSource""
          HideSelectedItems=""false""
          TextFieldName=""@nameof(City.CityName)""
          @bind-Values=""@Values"">
</DxTagBox>

@code {
    List<City> DataSource { get; set; }
    IEnumerable<City> Values { get; set; }

    protected override void OnInitialized() {
        base.OnInitialized();
        DataSource = CityData.Cities;
        Values = new List<City>() { DataSource[3], DataSource[5] };
    }
}")
</CodeSnippetTabPage>
<CodeSnippetTabPage Text="City">
@(@"public class City {
    public int Id { get; set; }
    public int CountryId { get; set; }
    public string CityName { get; set; }
}

public static class CityData {
    private static readonly Lazy<List<City>> cities = new Lazy<List<City>>(() => {
        return new List<City>() {
            new City() { Id = 0, CountryId = 0, CityName = ""Washington"" },
            new City() { Id = 1, CountryId = 0, CityName = ""New York"" },
            new City() { Id = 2, CountryId = 0, CityName = ""Los Angeles"" },
            new City() { Id = 3, CountryId = 1, CityName = ""Berlin"" },
            new City() { Id = 4, CountryId = 1, CityName = ""Munich"" },
            new City() { Id = 5, CountryId = 1, CityName = ""Hamburg"" },
            new City() { Id = 6, CountryId = 2, CityName = ""Tokyo"" },
            new City() { Id = 7, CountryId = 2, CityName = ""Osaka"" },
            new City() { Id = 8, CountryId = 2, CityName = ""Yokohama"" }
        };
    });
    public static List<City> Cities { get { return cities.Value; } }
}")
</CodeSnippetTabPage>
</CodeSnippetTabbed>
