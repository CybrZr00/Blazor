<DemoPageSectionComponent Id="Navigation-ContextMenu-Templates">
    <div class="dxbs-preventsel target-container"
         @oncontextmenu="((e) => ContextMenu.ShowAsync(e))"
         @oncontextmenu:preventDefault>
        <p style="display: inline-block; text-align: center; margin: auto; color:@TextColor; background-color:@BackgroundColor">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sit amet metus vel nisi blandit tincidunt vel efficitur purus. Nunc nec turpis tempus, accumsan orci auctor, imperdiet mauris. Fusce id purus magna.</p>
    </div>

    <DxContextMenu @ref="@ContextMenu">
        <Items>
            <DxContextMenuItem Text="Text color">
                <SubMenuTemplate>
                    <ColorPicker HeaderText="Text color" SelectedColor="@TextColor" ColorChanged="@(color => ChangeTextColor(color))" />
                </SubMenuTemplate>
            </DxContextMenuItem>
            <DxContextMenuItem Text="Background color">
                <SubMenuTemplate>
                    <ColorPicker HeaderText="Background color" SelectedColor="@BackgroundColor" ColorChanged="@(color => ChangeBackgroundColor(color))" />
                </SubMenuTemplate>
            </DxContextMenuItem>
            <DxContextMenuItem Text="Reset colors" Click="@ResetColors" BeginGroup="true"/>
        </Items>
    </DxContextMenu>

    @code {
        DxContextMenu ContextMenu { get; set; }
        private string TextColor { get; set; }
        private string BackgroundColor { get; set; }

        private void ChangeTextColor(string color) {
            TextColor = color;
            ContextMenu.HideAsync();
        }
        private void ChangeBackgroundColor(string color) {
            BackgroundColor = color;
            ContextMenu.HideAsync();
        }
        private void ResetColors() {
            TextColor = "unset";
            BackgroundColor = "unset";
            InvokeAsync(StateHasChanged);
        }
    }
</DemoPageSectionComponent>
